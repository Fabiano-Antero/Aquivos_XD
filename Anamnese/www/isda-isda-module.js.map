{"version":3,"sources":["webpack:///./src/app/novo/isda/isda.module.ts","webpack:///./src/app/novo/isda/isda.page.html","webpack:///./src/app/novo/isda/isda.page.scss","webpack:///./src/app/novo/isda/isda.page.ts"],"names":[],"mappings":"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","file":"isda-isda-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/*\nAutenticação\n*/\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { IsdaPage } from './isda.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IsdaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    IsdaPage\n  ]\n})\nexport class IsdaPageModule {}\n","module.exports = \"<ion-content>\\n  <form [formGroup]=\\\"fGroup\\\" class=\\\"bottomTab\\\">\\n\\n    <ion-item-divider color=\\\"asubcard\\\" class=\\\"ion-padding\\\">\\n      <ion-title class=\\\"ion-text-center\\\">\\n        Sintomas gerais\\n      </ion-title>\\n    </ion-item-divider>\\n\\n    <ion-card color=\\\"light\\\">\\n\\n      <ion-card-header color=\\\"acard\\\">\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          <h5><strong>Sintoma</strong></h5>\\n        </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list lines=\\\"full\\\">\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><span>*</span>Faça uma breve descrição:</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"sintomas\\\"></ion-input>\\n          </ion-item>\\n\\n          <div *ngIf=\\\"fGroup.controls.sintomas.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.sintomas.errors.maxlength\\\"\\n              class=\\\"ion-padding-start \\\">Valo máximo de caracteres é\\n              250!</p>\\n          </div>\\n\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><span>*</span>Por quanto tempo?</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"tempo\\\"></ion-input>\\n          </ion-item>\\n\\n          <div *ngIf=\\\"fGroup.controls.tempo.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.tempo.errors.maxlength\\\"\\n              class=\\\"ion-padding-start \\\">Valo máximo de caracteres é\\n              250!</p>\\n          </div>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <!-- Card Febre -->\\n    <ion-card color=\\\"light\\\">\\n\\n      <ion-card-header color=\\\"acard\\\">\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          <h5><strong>Apresenta Febre?</strong></h5>\\n        </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list lines=\\\"full\\\">\\n\\n          <ion-radio-group formControlName=\\\"febre_presenca\\\">\\n            <ion-grid>\\n              <ion-row class=\\\"ion-nowrap\\\">\\n                <ion-col *ngFor=\\\"let lista of febre\\\">\\n                  <ion-item>\\n                    <ion-text>{{ lista.nome }}</ion-text>\\n                    <ion-radio value=\\\"{{ lista.valor }}\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-radio-group>\\n\\n          <!--Input number, captura de temperatura-->\\n\\n          <ion-item *ngIf=\\\"fGroup.value.febre_presenca == 'sim'\\\">\\n\\n            <ion-label position=\\\"floating\\\"><span>*</span>Quantos graus?</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"febre_valor\\\"></ion-input>\\n          </ion-item>\\n\\n          <div *ngIf=\\\"fGroup.controls.febre_valor.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.febre_valor.errors.maxlength\\\"\\n              class=\\\"ion-padding-start \\\">Valo máximo de caracteres é\\n              250!</p>\\n          </div>\\n\\n          <ion-item *ngIf=\\\"fGroup.value.febre_presenca ==  'sim'\\\">\\n            <ion-label position=\\\"floating\\\"><span>*</span>Por quanto tempo?</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"febre_tempo\\\"></ion-input>\\n          </ion-item>\\n\\n          <div *ngIf=\\\"fGroup.controls.febre_tempo.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.febre_tempo.errors.maxlength\\\"\\n              class=\\\"ion-padding-start \\\">Valo máximo de caracteres é\\n              250!</p>\\n          </div>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <!-- Card Alterações de peso -->\\n    <ion-card color=\\\"light\\\">\\n\\n      <ion-card-header color=\\\"acard\\\">\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          <h5><strong>Presença de alteração de peso?</strong></h5>\\n        </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list lines=\\\"full\\\">\\n\\n          <!--\\n             Checkbox: <ion-label>Sim</ion-label>, <ion-label>Não</ion-label> e <ion-label>Não</ion-label> questionado.\\n             Obs: Ao selecionar o checkbox de opção <ion-label>Sim</ion-label>, o campo de input \\n                 Que receberá o período de tempo da alteraçãode peso do paciente deverá ser ativado. \\n                 Preferencialmente se possível ele deverá permanecer \\n                 oculto, porém se não houver essa possibilidade ele deverá permanecer desabilitado.\\n           -->\\n          <ion-radio-group formControlName=\\\"alteracao_peso_presenca\\\">\\n            <ion-grid>\\n              <ion-row class=\\\"ion-nowrap\\\">\\n                <ion-col *ngFor=\\\"let lista of peso\\\">\\n                  <ion-item>\\n                    <ion-text>{{ lista.nome }}</ion-text>\\n                    <ion-radio value=\\\"{{ lista.valor }}\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-radio-group>\\n\\n          <!--Input text, captura de período de tempo-->\\n          <ion-item *ngIf=\\\"fGroup.value.alteracao_peso_presenca == 'sim'\\\">\\n            <ion-label position=\\\"floating\\\"><span>*</span>Peso:</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"alteracao_peso_valor\\\">\\n            </ion-input>\\n          </ion-item>\\n\\n          <div *ngIf=\\\"fGroup.controls.alteracao_peso_valor.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.alteracao_peso_valor.errors.maxlength\\\"\\n              class=\\\"ion-padding-start \\\">Valo máximo de caracteres é\\n              250!</p>\\n          </div>\\n          \\n          <ion-item *ngIf=\\\"fGroup.value.alteracao_peso_presenca == 'sim'\\\">\\n                  <ion-label position=\\\"floating\\\"><span>*</span>Alteração do peso: </ion-label>\\n                  <ion-input type=\\\"text\\\" formControlName=\\\"alteracao_peso_valor_peso\\\">\\n                  </ion-input>\\n          </ion-item>\\n\\n          <div *ngIf=\\\"fGroup.controls.alteracao_peso_valor_peso.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.alteracao_peso_valor_peso.errors.maxlength\\\"\\n              class=\\\"ion-padding-start \\\">Valo máximo de caracteres é\\n              250!</p>\\n          </div>\\n\\n          <ion-item *ngIf=\\\"fGroup.value.alteracao_peso_presenca == 'sim'\\\">\\n            <ion-label position=\\\"floating\\\"><span>*</span>Em quanto tempo?</ion-label>\\n                  <ion-input type=\\\"text\\\" formControlName=\\\"alteracao_peso_tempo\\\">\\n                  </ion-input>\\n          </ion-item>\\n\\n          <div *ngIf=\\\"fGroup.controls.alteracao_peso_tempo.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.alteracao_peso_tempo.errors.maxlength\\\"\\n              class=\\\"ion-padding-start \\\">Valo máximo de caracteres é\\n              250!</p>\\n          </div>\\n\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <!-- Card Sudorese -->\\n\\n    <ion-card color=\\\"light\\\">\\n\\n      <ion-card-header color=\\\"acard\\\">\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          <h5><strong>Sudorese?</strong></h5>\\n        </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list lines=\\\"full\\\">\\n\\n          <ion-radio-group formControlName=\\\"sudoreses\\\">\\n            <ion-grid>\\n              <ion-row class=\\\"ion-nowrap\\\">\\n                <ion-col *ngFor=\\\"let lista of sudorese\\\">\\n                  <ion-item>\\n                    <ion-text>{{ lista.nome }}</ion-text>\\n                    <ion-radio value=\\\"{{ lista.valor }}\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-radio-group>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <!-- Card Calafrios -->\\n\\n    <ion-card color=\\\"light\\\">\\n\\n      <ion-card-header color=\\\"acard\\\">\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          <h5><strong>Calafrios?</strong></h5>\\n        </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list lines=\\\"full\\\">\\n\\n          <ion-radio-group formControlName=\\\"calafrios\\\">\\n            <ion-grid>\\n              <ion-row class=\\\"ion-nowrap\\\">\\n                <ion-col *ngFor=\\\"let lista of calafrios\\\">\\n                  <ion-item>\\n                    <ion-text>{{ lista.nome }}</ion-text>\\n                    <ion-radio value=\\\"{{ lista.valor }}\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-radio-group>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <!-- Card Cãibras -->\\n\\n    <ion-card color=\\\"light\\\">\\n\\n      <ion-card-header color=\\\"acard\\\">\\n        <ion-card-title class=\\\"ion-text-center\\\">\\n          <h5><strong>Cãibras?</strong></h5>\\n        </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list lines=\\\"full\\\">\\n          <ion-radio-group formControlName=\\\"caibras\\\">\\n            <ion-grid>\\n              <ion-row class=\\\"ion-nowrap\\\">\\n                <ion-col *ngFor=\\\"let lista of caibras\\\">\\n                  <ion-item>\\n                    <ion-text>{{ lista.nome }}</ion-text>\\n                    <ion-radio value=\\\"{{ lista.valor }}\\\"></ion-radio>\\n                  </ion-item>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-radio-group>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button color=\\\"dark\\\" expand=\\\"block\\\" [routerLink]=\\\"['/novo/isda2']\\\">Próximo</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\"","module.exports = \"p {\\n  color: red;\\n  font-size: 10px; }\\n\\nspan {\\n  color: red; }\\n\\n.bottomTab {\\n  margin-bottom: 20%; }\\n\\n.ion-label {\\n  font-size: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbm92by9pc2RhL0M6XFxVc2Vyc1xcZmFiaWFcXERvY3VtZW50c1xcYXBwMjAxOV8xX2FuYW1uZXNlX2RpZ2l0YWwvc3JjXFxhcHBcXG5vdm9cXGlzZGFcXGlzZGEucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBVTtFQUNWLGVBQWUsRUFBQTs7QUFFbkI7RUFFSSxVQUFVLEVBQUE7O0FBRWQ7RUFDSSxrQkFBbUIsRUFBQTs7QUFFdkI7RUFDSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ub3ZvL2lzZGEvaXNkYS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwe1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG5zcGFue1xyXG5cclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuLmJvdHRvbVRhYntcclxuICAgIG1hcmdpbi1ib3R0b206ICAyMCU7XHJcbn1cclxuLmlvbi1sYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuXHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IdentificacaoService } from 'src/app/services/identificacao.service';\n\n/*\n\n Import das das bibliotecas para validação das entradas\n\n */\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-isda',\n  templateUrl: './isda.page.html',\n  styleUrls: ['./isda.page.scss'],\n})\nexport class IsdaPage implements OnInit {\n  title = 'ISDA';\n\n  // variáveis\n  parte2 = false;\n  parte3 = false;\n  parte4 = false;\n  parte5 = false;\n  parte6 = false;\n  parte7 = false;\n  parte8 = false;\n  parte9 = false;\n\n  // Array de nomes e valores\n\n  public febre: Array<object> = [];\n  public peso: Array<object> = [];\n  public sudorese: Array<object> = [];\n  public calafrios: Array<object> = [];\n  public caibras: Array<object> = [];\n\n\n  public fGroup: FormGroup;\n\n  constructor(\n    private fBuilder: FormBuilder,\n    private identService: IdentificacaoService) {\n\n\n    this.fGroup = this.fBuilder.group({\n\n      // Falta fazer as validações com o validator\n\n      sintomas: ['', Validators.compose([Validators.required, Validators.maxLength(250)])],\n      tempo: ['', Validators.compose([Validators.required, Validators.maxLength(250)])],\n      febre_valor: ['', Validators.compose([Validators.required, Validators.maxLength(250)])],\n      febre_tempo: ['', Validators.compose([Validators.required, Validators.maxLength(250)])],\n      sudoreses: [''],\n      calafrios: [''],\n      caibras: [''],\n      alteracao_peso_presenca: [''],\n      alteracao_peso_valor: ['', Validators.compose([Validators.required, Validators.maxLength(250)])],\n      // tslint:disable-next-line: max-line-length\n      alteracao_peso_valor_peso: ['', Validators.compose([Validators.required, Validators.maxLength(250)])],\n      alteracao_peso_tempo: [''],\n      febre_presenca: ['']\n    });\n\n    this.febre = [\n      {\n        nome: 'Sim',\n        valor: 'sim'\n      },\n      {\n        nome: 'Não',\n        valor: 'nao'\n      },\n      {\n        nome: 'NQN',\n        valor: 'nqn'\n      }\n    ],\n      this.peso = [\n        {\n          nome: 'Sim',\n          valor: 'sim'\n        },\n        {\n          nome: 'Não',\n          valor: 'nao'\n        },\n        {\n          nome: 'NQN',\n          valor: 'nqn'\n        }\n      ],\n      this.sudorese = [\n        {\n          nome: 'Sim',\n          valor: 'sim'\n        },\n        {\n          nome: 'Não',\n          valor: 'nao'\n        },\n        {\n          nome: 'NQN',\n          valor: 'nqn'\n        }\n      ],\n      this.calafrios = [\n        {\n          nome: 'Sim',\n          valor: 'sim'\n        },\n        {\n          nome: 'Não',\n          valor: 'nao'\n        },\n        {\n          nome: 'NQN',\n          valor: 'nqn'\n        }\n      ],\n      this.caibras = [\n        {\n          nome: 'Sim',\n          valor: 'sim'\n        },\n        {\n          nome: 'Não',\n          valor: 'nao'\n        },\n        {\n          nome: 'NQN',\n          valor: 'nqn'\n        }\n      ];\n  }\n\n  setOcultValidate() {\n\n\n    const pesoValorContol = this.fGroup.get('alteracao_peso_valor');\n    const pesoValorPesoContol = this.fGroup.get('alteracao_peso_valor_peso');\n    const pesoTempoContol = this.fGroup.get('alteracao_peso_tempo');\n    const febreValorContol = this.fGroup.get('febre_valor');\n    const febreTempoContol = this.fGroup.get('febre_tempo');\n\n    this.fGroup.get('alteracao_peso_presenca').valueChanges.subscribe(pesoPresenca => {\n\n      if (pesoPresenca === 'sim') {\n        pesoValorContol.setValidators([Validators.required, Validators.maxLength(250)]);\n        pesoValorPesoContol.setValidators([Validators.required, Validators.maxLength(250)]);\n        pesoTempoContol.setValidators([Validators.required, Validators.maxLength(250)]);\n\n      } else {\n        pesoValorContol.clearValidators();\n        pesoValorPesoContol.clearValidators();\n        pesoTempoContol.clearValidators();\n\n      }\n\n      pesoValorContol.updateValueAndValidity();\n      pesoValorPesoContol.updateValueAndValidity();\n      pesoTempoContol.updateValueAndValidity();\n\n    });\n\n    this.fGroup.get('febre_presenca').valueChanges.subscribe(febrePresenca => {\n\n      if (febrePresenca === 'sim') {\n        febreValorContol.setValidators([Validators.required, Validators.maxLength(250)]);\n        febreTempoContol.setValidators([Validators.required, Validators.maxLength(250)]);\n\n\n      } else {\n        febreValorContol.clearValidators();\n        febreTempoContol.clearValidators();\n\n      }\n\n      febreValorContol.updateValueAndValidity();\n      febreTempoContol.updateValueAndValidity();\n\n    });\n  }\n\n  ngOnInit() {\n    this.setOcultValidate();\n  }\n\n\n  ionViewWillLeave() {\n\n    if (!this.fGroup.valid) {\n\n      this.identService.alerta(\n        'Isda',\n        'Você deixou campos vazios ou preenchidos de forma errada, lembre-se de voltar para corrigi-los.',\n      );\n\n\n\n    } else if (this.identService.verifica.indexOf(5) > -1) {\n\n      // evia para o big json\n      this.identService.allObject.isda.sintomas_gerais = this.fGroup.value;\n\n      // visualizar resultadonos no console\n      console.log(this.identService.allObject.isda.sintomas_gerais);\n      console.log(this.identService.verifica);\n      console.log(this.identService.verificador());\n\n    } else {\n      // evia para o big json\n      this.identService.allObject.isda.sintomas_gerais = this.fGroup.value;\n\n\n      // visualizar resultadonos no console\n      console.log(this.identService.allObject.isda.sintomas_gerais);\n\n\n      this.identService.verifica.push(5);\n      console.log(this.identService.verifica);\n    }\n\n  }\n\n}\n"],"sourceRoot":""}