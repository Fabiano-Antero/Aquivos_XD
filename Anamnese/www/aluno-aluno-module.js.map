{"version":3,"sources":["webpack:///./src/app/novo/aluno/aluno.module.ts","webpack:///./src/app/novo/aluno/aluno.page.html","webpack:///./src/app/novo/aluno/aluno.page.scss","webpack:///./src/app/novo/aluno/aluno.page.ts"],"names":[],"mappings":"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","file":"aluno-aluno-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlunoPage } from './aluno.page';\n\n\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: AlunoPage }])\n  ],\n  declarations: [AlunoPage]\n})\nexport class AlunoPageModule { }\n","module.exports = \"<ion-content>\\n\\n  <ion-card class=\\\"light\\\">\\n    <ion-card-header>\\n      <ion-avatar>\\n        <img src=\\\"../../../assets/img/friendship.png\\\">\\n      </ion-avatar>\\n      <ion-card-title class=\\\"ion-text-center\\\">\\n        <ion-label>ID do aluno</ion-label>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <form [formGroup]=\\\"fGroup\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><strong>*</strong> Nome completo:</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"nome\\\"></ion-input>\\n          </ion-item>\\n          <div *ngIf=\\\"fGroup.controls.nome.errors\\\">\\n\\n            <p *ngIf=\\\"fGroup.controls.nome.errors.minlength\\\" class=\\\"ion-padding-start \\\">Valo mínimo de caracteres é\\n              igual a 2!</p>\\n            <p *ngIf=\\\"fGroup.controls.nome.errors.maxlength\\\" class=\\\"ion-padding-start \\\">O valor máximo de 50 caracteres\\n              foi excedido!</p>\\n          </div>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><strong>*</strong> E-mail:</ion-label>\\n            <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n          <div *ngIf=\\\"fGroup.controls.email.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.email.errors.pattern\\\" class=\\\"ion-padding-start \\\">E-mail inválido!</p>\\n          </div>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><strong>*</strong> Matrícula:</ion-label>\\n            <ion-input type=\\\"number\\\" formControlName=\\\"matricula\\\"></ion-input>\\n          </ion-item>\\n          <div *ngIf=\\\"fGroup.controls.matricula.errors\\\">\\n            <p *ngIf=\\\"fGroup.controls.matricula.errors.min\\\" class=\\\"ion-padding-start \\\">Valo mínimo é de digítos 10!</p>\\n            <p *ngIf=\\\"fGroup.controls.matricula.errors.max\\\" class=\\\"ion-padding-start \\\">O valor máximo é de digítos 10!\\n            </p>\\n          </div>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><strong>*</strong> Grupo:</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"grupo\\\"></ion-input>\\n          </ion-item>\\n          <div *ngIf=\\\"fGroup.controls.grupo.errors\\\">\\n\\n            <p *ngIf=\\\"fGroup.controls.grupo.errors.minlength\\\" class=\\\"ion-padding-start \\\">Valo mínimo de caracteres é\\n              igual a 2!</p>\\n            <p *ngIf=\\\"fGroup.controls.grupo.errors.maxlength\\\" class=\\\"ion-padding-start \\\">O valor máximo de 50 caracteres\\n              foi excedido!</p>\\n          </div>\\n        </form>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"light bottomTab\\\">\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <p>Os campos marcados com asterisco (*) são obrigatórios, lembre-se de preenchelos ou não poderá concluir a\\n              anamnese.</p>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"ion-avatar {\\n  width: 30%;\\n  height: auto;\\n  overflow: hidden;\\n  margin: 10% 0% 0% 35%; }\\n\\np {\\n  color: red;\\n  font-size: 10px; }\\n\\nstrong {\\n  color: red; }\\n\\n.bottomTab {\\n  margin-bottom: 21%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbm92by9hbHVuby9DOlxcVXNlcnNcXGZhYmlhXFxEb2N1bWVudHNcXGFwcDIwMTlfMV9hbmFtbmVzZV9kaWdpdGFsL3NyY1xcYXBwXFxub3ZvXFxhbHVub1xcYWx1bm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBVTtFQUNWLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsVUFBVTtFQUNWLGVBQWUsRUFBQTs7QUFFbkI7RUFFSSxVQUFVLEVBQUE7O0FBRWQ7RUFDRSxrQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL25vdm8vYWx1bm8vYWx1bm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWF2YXRhcntcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgbWFyZ2luOiAxMCUgMCUgMCUgMzUlO1xyXG4gIH1cclxuXHJcbiAgcHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IDEwcHg7XHJcbn1cclxuc3Ryb25ne1xyXG5cclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuLmJvdHRvbVRhYntcclxuICBtYXJnaW4tYm90dG9tOiAgMjElO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { IdentificacaoService } from 'src/app/services/identificacao.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-aluno',\n  templateUrl: './aluno.page.html',\n  styleUrls: ['./aluno.page.scss'],\n})\nexport class AlunoPage implements OnInit {\n\n  public fGroup: FormGroup;\n\n\n  constructor(\n    private fBuilder: FormBuilder,\n    private identService: IdentificacaoService) {\n\n\n    // Faz a validação dos campos\n    this.fGroup = this.fBuilder.group({\n\n      nome: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(250)])],\n      // tslint:disable-next-line: max-line-length\n      email: [null, Validators.compose([Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i)])],\n      matricula: [null, Validators.compose([Validators.required, Validators.min(999999999), Validators.max(9999999999)])],\n      grupo: [null, Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(250)])]\n    });\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  // Metodo que é executado ao sair da pagina\n  ionViewWillLeave() {\n\n    // ** Esse if verifica se tem campos vazios, se true ele gera um alerta, se false ele envia para o json */\n    if (!this.fGroup.valid) {\n\n      this.identService.alerta(\n        'Identificação do Aluno',\n        'Você deixou campos vazios ou preenchidos de forma errada, lembre-se de voltar para corrigi-los.',\n      );\n\n    } else if (this.identService.verifica.indexOf(0) > -1) {\n\n      // evia para o big json\n      this.identService.allObject.aluno = this.fGroup.value;\n\n      // visualizar resultadonos no console\n      console.log(this.identService.allObject.aluno);\n      console.log(this.identService.verifica);\n      console.log(this.identService.verificador());\n\n    } else {\n\n      // evia para o big json\n      this.identService.allObject.aluno = this.fGroup.value;\n\n      // visualizar resultadonos no console\n      console.log(this.identService.allObject.aluno);\n\n      this.identService.verifica.push(0);\n      console.log(this.identService.verifica);\n\n\n    }\n\n  }\n\n\n}\n"],"sourceRoot":""}